<?php

/**
 * @file
 * This is the specimen module.
 */

/**
 * @author Brent Mitton
 * 
 */
function islandora_lab_object_specimen_menu() {
  return array(
      'sponge/classes' => array(
        'title' => "Autocomplete Sponge Classes",
        'page callback' => "_sponge_class_autocomplete",
        'access arguments' => true,
        'type' => MENU_CALLBACK
      ),
    );
}

/**
 * Implements the required_objects() hook. This is responsible for creating the 
 * necessary objects in fedora when we install the solution pack. In the case
 * of specimen, all we need to install is the DS-Composite-Model
 */
function islandora_lab_object_specimen_islandora_required_objects(IslandoraTuque $connection) {
  module_load_include('inc', 'islandora_bioinformatics_base', 'base_functions');

  $module_path = drupal_get_path('module', 'islandora_lab_object_specimen');
  $content_model = $connection->repository->constructObject('islandora:specimen_cmodel');
  $content_model->owner = 'fedoraAdmin';
  $content_model->label = 'Bioinformatics Specimen Content Model';
  $content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/specimen_ds_composite_model.xml", FALSE);
  $content_model->ingestDatastream($datastream);
  
  //Create relationship with LabObject
  $content_model->relationships->add(FEDORA_MODEL_URI, 'hasModel', 'islandora:lab_object_cmodel');

  // Project Collection
  $specimen_collection = $connection->repository->constructObject('islandora:specimen_collection');
  $specimen_collection->owner = 'fedoraAdmin';
  $specimen_collection->label = 'Specimen Collection';
  $specimen_collection->models = 'islandora:collectionCModel';
  $specimen_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  $datastream = $specimen_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/specimen_collection_policy.xml", FALSE);
  $specimen_collection->ingestDatastream($datastream);


  // set up the relationship between projects and specimens
  $project_cm = islandora_object_load("islandora:project_cmodel");

  add_hasPart($project_cm, "islandora:specimen_cmodel");
  add_isPartOf($content_model, "islandora:project_cmodel");


  return array(
    'islandora_lab_object_specimen' => array(
      'title' => 'Bioinformatics Specimen',
      'objects' => array(
          $content_model,
          $specimen_collection,
      ),
    ),
  );
}


/**
  * Implements the form_builder_forms() hook. This is responsible for loading
  * the form xml that we create in form builder. This will add the form into 
  * the system as a built in form.
  */
function islandora_lab_object_specimen_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_lab_object_specimen');
  $forms = array(
    'General Specimen Form' => array(
      'form_file' => "$module_path/xml/specimen_form.xml",
    ),
    'Sponge Form' => array(
      'form_file' => "$module_path/xml/sponge_form.xml",
    ),
    'Bacteria Form' => array(
      'form_file' => "$module_path/xml/bacteria_form.xml"
    ),
  );

  return $forms;
}

/**
  * Implements the form_builder_form_associations() hook. This is responsible
  * for associating the form that we create in the form_builder_form() hook
  * with the content-model that we created in the required_objects() hook.
  */
function islandora_lab_object_specimen_islandora_xml_form_builder_form_associations() {
  $module_path = drupal_get_path('module', 'islandora_lab_object_specimen');
  return array(
    'islandora_lab_object_specimen_form' => array(
      'content_model' => 'islandora:specimen_cmodel',
      'form_name' => 'Specimen Form',
      'dsid' => 'EML',
      'title_field' => array(
        'dataset', 'coverage', 'taxonomicCoverage', ''
      ),
      'transform' => '',
      'template' => FALSE,
    ),
  );
}

/**
 * Creates an additional ingest step, which will be displayed after the initial
 * form. For this module this means displaying an image upload form.
 */
function islandora_lab_object_specimen_islandora_specimen_cmodel_islandora_ingest_steps(array $configuration) {
  return array(
    'islandora_lab_object_specimen_file_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_lab_object_specimen_upload_form',
      'module' => 'islandora_lab_object_specimen',
      'file' => 'includes/islandora_lab_object_specimen_upload.form.inc'
    ),
    'islandora_lab_object_specimen_project_relate' => array(
      'weight' => 15,
      'type' => 'form',
      'form_id' => 'islandora_lab_object_specimen_project_form',
      'module' => 'islandora_lab_object_specimen',
      'file' => 'includes/islandora_lab_object_specimen_project.form.inc'
    )
  );
}


/**
 * This "registers" the theme so in the system. 
 * 'template' points to a tpl file, which will be mostly under front-end
 *    control
 * 'pattern' I'm not sure what this does, but I don't think it really matters
 *    too much.
 *
 *  'variables' This doesnt have too much functional purpose, it says what sort
 *    of things should be in the $variables array
 */
function islandora_lab_object_specimen_theme($existing, $type, $theme, $path) {
  
  return array(
    'islandora_lab_object_specimen' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/specimen-theme',
      'pattern' => 'islandora_lab_object_specimen__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Here we populate the $variable array with what we want to send to the 
 * template. After this point the front end takes over. We should be able
 * The second argument in theme() is the contents of the $variable array that
 * the front-end will use. In this case, I'm just passing them a single 
 * islandora_object. We could also do tuque stuff in here, or any sort of 
 * PHP
 */
function islandora_lab_object_specimen_islandora_specimen_cmodel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_lab_object_specimen', array('islandora_object' => $object));
  return array('' => $output);
}




function _sponge_class_autocomplete($string){
  $matches = array();
  
  $result = db_select('labobject_sponge_class', 'c')
    ->fields('c', array('class'))
    ->condition('class', '%' . db_like($string) . '%', 'LIKE')
    ->execute();
  // save the query to matches
  foreach ($result as $row) {
    $matches[$row->class] = check_plain($row->class);
  }

  drupal_json_output($matches);
}
























